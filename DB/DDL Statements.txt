create table produkt (
    produkt_id varchar(255) primary key,
    titel varchar(255) not null,
    rating float,
    verkaufsrang integer,
    bild varchar(1023)
);

create table buch (
    produkt_id varchar(255) primary key references produkt(produkt_id),
    isbn varchar(255) unique not null,
    seitenanzahl integer,
    erscheinungsdatum date,
    verlag varchar(255)
);

create table dvd (
    produkt_id varchar(255) primary key references produkt(produkt_id),
    format varchar(255) not null,
    laufzeit integer,
    region_code integer
);

create table musikcd (
    produkt_id varchar(255) primary key references produkt(produkt_id),
    erscheinungsdatum date,
);

create table person (
    person_id bigint primary key generated by default as identity,
    name varchar(255) not null
);

create table autoren (
    produkt_id varchar(255) not null,
    person_id bigint not null,
    hauptautor_id bigint,
    primary key (person_id, produkt_id),
    foreign key (produkt_id) references produkt(produkt_id),
    foreign key (person_id) references person(person_id),
    foreign key (hauptautor_id) references person(person_id)
);

create table kuenstler (
    produkt_id varchar(255) not null,
    person_id bigint not null,
    primary key (produkt_id, person_id),
    foreign key (produkt_id) references musikcd(produkt_id),
    foreign key (person_id) references person(person_id)
);

create table dvdrollen (
    produkt_id varchar(255) not null,
    person_id bigint not null,
    rolle varchar(255) not null check (rolle in ('Actor', 'Creator', 'Director')),
    primary key (produkt_id, person_id, rolle),
    foreign key (produkt_id) references dvd(produkt_id),
    foreign key (person_id) references person(person_id)
);

create table filiale (
    filial_id bigint primary key generated by default as identity,
    name varchar(255) not null,
    anschrift varchar(255) not null
);

create table angebot (
    angebot_id bigint primary key generated by default as identity,
    produkt_id varchar(255) not null,
    filial_id bigint not null,
    foreign key (produkt_id) references produkt(produkt_id),
    foreign key (filial_id) references filiale(filial_id)
);

create table angebotsdetails (
    angebot_id bigint not null,
    zustand varchar(255) not null,
    preis float,
    primary key (angebot_id, zustand),
    foreign key (angebot_id) references angebot(angebot_id)
);

create table kunde (
    kunde_id bigint primary key generated by default as identity,
    name varchar(255) not null
);

create table kauf (
    kauf_id bigint primary key generated by default as identity,
    kaufdatum timestamp not null,
    kontonummer varchar(255) not null,
    lieferadresse varchar(255) not null,
    kunde_id bigint not null,
    foreign key (kunde_id) references kunde(kunde_id)
);

create table kaufdetails (
    angebot_id bigint not null,
    kauf_id bigint not null,
    zustand varchar(255) not null,
    menge integer not null,
    preis float not null,
    primary key (angebot_id, kauf_id, zustand),
    foreign key (angebot_id) references angebot(angebot_id),
    foreign key (kauf_id) references kauf(kauf_id)
);

create table rezension (
    rezension_id bigint primary key generated by default as identity,
    datum date not null,
    punkte integer not null check (punkte between 1 and 5),
    text varchar(255),
    zusammenfassung varchar(255),
    anzahl_nuetzlich integer,
    kunde_id bigint not null,
    produkt_id varchar(255) not null,
    foreign key (kunde_id) references kunde(kunde_id),
    foreign key (produkt_id) references produkt(produkt_id)
);

create table trackliste (
    track_id bigint primary key generated by default as identity,
    titel varchar(255) not null,
    produkt_id varchar(255) not null,
    foreign key (produkt_id) references musikcd(produkt_id)
);

create table labelliste (
    label_id bigint primary key generated by default as identity,
    name varchar(255) not null,
    produkt_id varchar(255) not null,
    foreign key (produkt_id) references musikcd(produkt_id)
);

create table kategorie (
    kategorie_id bigint primary key generated by default as identity,
    name varchar(255) not null,
    parent_id bigint,
    foreign key (parent_id) references kategorie(kategorie_id)
);

create table produktkategorie (
    produkt_id varchar(255) not null,
    kategorie_id bigint not null,
    primary key (produkt_id, kategorie_id),
    foreign key (produkt_id) references produkt(produkt_id),
    foreign key (kategorie_id) references kategorie(kategorie_id)
);

create table aehnlichzu (
    produkt_ida varchar(255) not null,
    produkt_idb varchar(255) not null,
    primary key (produkt_ida, produkt_idb),
    foreign key (produkt_ida) references produkt(produkt_id),
    foreign key (produkt_idb) references produkt(produkt_id)
);

CREATE INDEX IF NOT EXISTS idx_angebotdetails_zustand ON angebotsdetails(zustand);
CREATE INDEX IF NOT EXISTS idx_rezension_punkte ON rezension(punkte);
CREATE INDEX IF NOT EXISTS idx_rezension_datum ON rezension(datum);
CREATE INDEX IF NOT EXISTS idx_produkt_verkaufsrang ON produkt(verkaufsrang);
CREATE INDEX IF NOT EXISTS idx_produkt_rating ON produkt(rating);
CREATE INDEX IF NOT EXISTS idx_trackliste_titel ON trackliste(titel);
CREATE INDEX IF NOT EXISTS idx_dvdrollen_rolle ON dvdrollen(rolle);
